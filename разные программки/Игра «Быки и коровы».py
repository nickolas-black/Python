# -*- coding: utf-8 -*-

# Игра «Быки и коровы»
# https://goo.gl/Go2mb9
#
# Правила:
# Компьютер загадывает четырехзначное число, все цифры которого различны
# (первая цифра числа отлична от нуля). Игроку необходимо разгадать задуманное число.
# Игрок вводит четырехзначное число c неповторяющимися цифрами,
# компьютер сообщают о количестве «быков» и «коров» в названном числе
# «бык» — цифра есть в записи задуманного числа и стоит в той же позиции,
#       что и в задуманном числе
# «корова» — цифра есть в записи задуманного числа, но не стоит в той же позиции,
#       что и в задуманном числе
#
# Например, если задумано число 3275 и названо число 1234,
# получаем в названном числе одного «быка» и одну «корову».
# Очевидно, что число отгадано в том случае, если имеем 4 «быка».
#
# Формат ответа компьютера
# > быки - 1, коровы - 1


# Составить отдельный модуль mastermind_engine, реализующий функциональность игры.
# В этом модуле нужно реализовать функции:
#   загадать_число()
#   проверить_число(NN) - возвращает словарь {'bulls': N, 'cows': N}
# Загаданное число хранить в глобальной переменной.
# Обратите внимание, что строки - это список символов.
#
# В текущем модуле  реализовать логику работы с пользователем:
#   модуль движка загадывает число
#   в цикле, пока число не отгадано
#       у пользователя запрашивается вариант числа
#       модуль движка проверяет число и выдает быков/коров
#       результат быков/коров выводится на консоль
#  когда игрок угадал таки число - показать количество ходов и вопрос "Хотите еще партию?"
#
# При написании кода учитывайте, что движок игры никак не должен взаимодействовать с пользователем.
# Все общение с пользователем делать в текущем модуле. Представьте, что движок игры могут использовать
# разные клиенты - веб, чатбот, приложение, етс - они знают как спрашивать и отвечать пользователю.
# Движок игры реализует только саму функциональность игры.
# Это пример применения SOLID принципа (см https://goo.gl/GFMoaI) в архитектуре программ.
# Точнее, в этом случае важен принцип единственной ответственности - https://goo.gl/rYb3hT

from termcolor import cprint
import random

otvet = []


def all_otvet():
    global otvet
    otvet = random.sample(range(1, 10), 4)
    return otvet


def chislo_proverka(nums, tru_num):
    bulls, cows = 0, 0

    for i, num in enumerate(nums):
        if nums[i] == tru_num[i]:
            bulls += 1
        elif num in tru_num:
            cows += 1
    return bulls, cows


chislo = all_otvet()


poptka = 0
cprint('Правила:'
       '\n Компьютер загадывает четырехзначное число, все цифры которого различны'
       '\n (первая цифра числа отлична от нуля). Игроку необходимо разгадать задуманное число.'
       '\n Игрок вводит четырехзначное число c неповторяющимися цифрами,'
       '\n компьютер сообщают о количестве «быков» и «коров» в названном числе'
       '\n «бык» — цифра есть в записи задуманного числа и стоит в той же позиции,'
       '\nчто и в задуманном числе.'
       '\n«корова» — цифра есть в записи задуманного числа, но не стоит в той же позиции,'
       '\nчто и в задуманном числе'
       '\n**************************'
       '\nНапример, если задумано число 3275 и названо число 1234,'
       '\nполучаем в названном числе одного «быка» и одну «корову».'
       '\n~~~~~~~~~~~~~~~~~~~~~~~~~~'
       '\nОчевидно, что число отгадано в том случае, если имеем 4 «быка».', color='blue')


def input_user():
    while True:
        nums = input('Введи 4 непоторяющихся цифры  : ')
        if len(nums) != 4 or not nums.isdigit():
            cprint('Вы ввели неправильные цифры!!!', color='red')
            continue
        nums = list(map(int, nums))
        if len(set(nums)) == 4:
            break
    return nums


while True:
    poptka += 1
    cprint('******************', color='yellow')
    cprint('Ход игрока', color='yellow')
    number = input_user()
    bulls, cows = chislo_proverka(number, chislo)
    print('Быки: ', bulls)
    print('Коровы: ', cows)
    if bulls == 4:
        cprint('Победил игрок', color='red')
        print('Компьютер загадал число: ', chislo)
        print('Количество попыток: ', poptka)
        break

